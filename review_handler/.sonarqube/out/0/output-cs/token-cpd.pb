µ
RD:\Documents\GitHub\MovieMood\review_handler\review_handler.Core\Entities\Movie.cs
	namespace 	
review_handler
 
. 
Core 
. 
Entities &
{ 
public 

class 
Movie 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
? 
Title 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
ReleaseDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
double 
Raiting 
{ 
get  #
;# $
set% (
;( )
}* +
}		 
}

 ô
SD:\Documents\GitHub\MovieMood\review_handler\review_handler.Core\Entities\Review.cs
	namespace 	
review_handler
 
. 
Core 
. 
Entities &
{ 
public 

class 
Review 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
Guid 
MovieId 
{ 
get !
;! "
set# &
;& '
}( )
public		 
Guid		 
UserId		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
int

 
MovieRating

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
public 
int 
? 

CastRating 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
? 
DirectorRating "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
GenreRating 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 
? 
SciptRating 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 

ReviewText !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
static 
ResultOfEntity $
<$ %
Review% +
>+ ,
Create- 3
(3 4
Guid4 8
movieId9 @
,@ A
GuidB F
userIdG M
,M N
intO R
movieRatingS ^
)^ _
{ 	
var 
review 
= 
new 
Review #
{ 
Id 
= 
Guid 
. 
NewGuid !
(! "
)" #
,# $
MovieId 
= 
movieId !
,! "
UserId 
= 
userId 
,  
MovieRating 
= 
movieRating )
} 
; 
return 
ResultOfEntity !
<! "
Review" (
>( )
.) *
Success* 1
(1 2
review2 8
)8 9
;9 :
} 	
} 
} Š
iD:\Documents\GitHub\MovieMood\review_handler\review_handler.Core\Entities\ReviewBuilder\IReviewBuilder.cs
	namespace 	
review_handler
 
. 
Core 
. 
Entities &
.& '
ReviewBuilder' 4
{ 
public 

	interface 
IReviewBuilder #
{ 
void 

BuildMovie 
( 
Guid 
movieId $
)$ %
;% &
void 
	BuildUser 
( 
Guid 
userId "
)" #
;# $
void 
BuildMovieRating 
( 
int !
movieRating" -
)- .
;. /
void		 
BuildCastRating		 
(		 
int		  

castRating		! +
)		+ ,
;		, -
void

 
BuildDirectorRating

  
(

  !
int

! $
directorRating

% 3
)

3 4
;

4 5
void 
BuildGenreRating 
( 
int !
genreRating" -
)- .
;. /
void 
BuildScriptRating 
( 
int "
scriptRating# /
)/ 0
;0 1
void 
BuildReviewText 
( 
string #

reviewText$ .
). /
;/ 0
Review 
Build 
( 
) 
; 
} 
} ÷
hD:\Documents\GitHub\MovieMood\review_handler\review_handler.Core\Entities\ReviewBuilder\ReviewBuilder.cs
	namespace 	
review_handler
 
. 
Core 
. 
Entities &
.& '
ReviewBuilder' 4
{ 
public 

class 
ReviewBuilder 
:  
IReviewBuilder! /
{ 
private 
readonly 
Review 
_review  '
;' (
public 
ReviewBuilder 
( 
) 
{ 	
_review		 
=		 
new		 
Review		  
(		  !
)		! "
;		" #
}

 	
public 
void 

BuildMovie 
( 
Guid #
movieId$ +
)+ ,
{ 	
_review 
. 
MovieId 
= 
movieId %
;% &
} 	
public 
void 
	BuildUser 
( 
Guid "
userId# )
)) *
{ 	
_review 
. 
UserId 
= 
userId #
;# $
} 	
public 
void 
BuildMovieRating $
($ %
int% (
movieRating) 4
)4 5
{ 	
_review 
. 
MovieRating 
=  !
movieRating" -
;- .
} 	
public 
void 
BuildCastRating #
(# $
int$ '

castRating( 2
)2 3
{ 	
_review 
. 

CastRating 
=  

castRating! +
;+ ,
} 	
public   
void   
BuildDirectorRating   '
(  ' (
int  ( +
directorRating  , :
)  : ;
{!! 	
_review"" 
."" 
DirectorRating"" "
=""# $
directorRating""% 3
;""3 4
}## 	
public%% 
void%% 
BuildGenreRating%% $
(%%$ %
int%%% (
genreRating%%) 4
)%%4 5
{&& 	
_review'' 
.'' 
GenreRating'' 
=''  !
genreRating''" -
;''- .
}(( 	
public** 
void** 
BuildScriptRating** %
(**% &
int**& )
scriptRating*** 6
)**6 7
{++ 	
_review,, 
.,, 
SciptRating,, 
=,,  !
scriptRating,," .
;,,. /
}-- 	
public// 
void// 
BuildReviewText// #
(//# $
string//$ *

reviewText//+ 5
)//5 6
{00 	
_review11 
.11 

ReviewText11 
=11  

reviewText11! +
;11+ ,
}22 	
public44 
Review44 
Build44 
(44 
)44 
{55 	
return66 
_review66 
;66 
}77 	
}88 
}99 ÷
pD:\Documents\GitHub\MovieMood\review_handler\review_handler.Core\Entities\ReviewBuilder\ReviewBuilderDirector.cs
	namespace 	
review_handler
 
. 
Core 
. 
Entities &
.& '
ReviewBuilder' 4
{ 
public 

class !
ReviewBuilderDirector &
{ 
public 
Review 
FinishedReview $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public !
ReviewBuilderDirector $
($ %
Guid% )
movieId* 1
,1 2
Guid3 7
userId8 >
,> ?
int@ C
movieRatingD O
,O P
intQ T

castRatingU _
,_ `
inta d
directorRatinge s
,s t
intu x
genreRating	y „
,
„ …
int
† ‰
scriptRating
Š –
,
– —
string
˜ ž

reviewText
Ÿ ©
)
© ª
{ 	
var 
reviewBuilder 
= 
new  #
ReviewBuilder$ 1
(1 2
)2 3
;3 4
reviewBuilder

 
.

 

BuildMovie

 $
(

$ %
movieId

% ,
)

, -
;

- .
reviewBuilder 
. 
	BuildUser #
(# $
userId$ *
)* +
;+ ,
reviewBuilder 
. 
BuildMovieRating *
(* +
movieRating+ 6
)6 7
;7 8
reviewBuilder 
. 
BuildCastRating )
() *

castRating* 4
)4 5
;5 6
reviewBuilder 
. 
BuildDirectorRating -
(- .
directorRating. <
)< =
;= >
reviewBuilder 
. 
BuildGenreRating *
(* +
genreRating+ 6
)6 7
;7 8
reviewBuilder 
. 
BuildScriptRating +
(+ ,
scriptRating, 8
)8 9
;9 :
reviewBuilder 
. 
BuildReviewText )
() *

reviewText* 4
)4 5
;5 6
FinishedReview 
= 
reviewBuilder *
.* +
Build+ 0
(0 1
)1 2
;2 3
} 	
} 
} Ð
QD:\Documents\GitHub\MovieMood\review_handler\review_handler.Core\Entities\User.cs
	namespace 	
review_handler
 
. 
Core 
. 
Entities &
{ 
public 

class 
User 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
? 
Username 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Email 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
Password 
{  !
get" %
;% &
set' *
;* +
}, -
public		 
string		 
?		 
Role		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
public

 
List

 
<

 
Review

 
>

 
Reviews

 #
{

$ %
get

& )
;

) *
set

+ .
;

. /
}

0 1
=

2 3
new

4 7
List

8 <
<

< =
Review

= C
>

C D
(

D E
)

E F
;

F G
} 
} ‡
OD:\Documents\GitHub\MovieMood\review_handler\review_handler.Core\Enums\Genre.cs
	namespace 	
review_handler
 
. 
Core 
. 
Enums #
{ 
public 

enum 
Genre 
{ 
NOGENRES 
= 
$num 
, 
ACTION 
= 
$num 
, 
	ADVENTURE 
= 
$num 
, 
	ANIMATION 
= 
$num 
, 
COMEDY		 
=		 
$num		 
,		 
CRIME

 
=

 
$num

 
,

 
DOCUMENTARY 
= 
$num 
, 
DRAMA 
= 
$num 
, 
CHILDREN 
= 
$num 
, 
FANTASY 
= 
$num 
, 
FILMNOIR 
= 
$num 
, 
HORROR 
= 
$num 
, 
MUSICAL 
= 
$num 
, 
MYSTERY 
= 
$num 
, 
ROMANCE 
= 
$num 
, 
SCIFI 
= 
$num 
, 
IMAX 
= 
$num 
, 
THRILLER 
= 
$num 
, 
WAR 
= 
$num 
, 
WESTERN 
= 
$num 
} 
} —
RD:\Documents\GitHub\MovieMood\review_handler\review_handler.Core\Helpers\Result.cs
	namespace 	
review_handler
 
. 
Core 
. 
Helpers %
{ 
public 

class 
Result 
{ 
public 
bool 
	IsSuccess 
{ 
get  #
;# $
set% (
;( )
}* +
public 
bool 
	IsFailure 
=>  
!! "
	IsSuccess" +
;+ ,
public		 
string		 
?		 
Message		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public

 
HttpStatusCode

 

StatusCode

 (
{

) *
get

+ .
;

. /
set

0 3
;

3 4
}

5 6
public 
HttpStatusCode 
HttpStatusCode ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
static 
Result 
Success $
($ %
)% &
=>' )
new* -
(- .
). /
{0 1
	IsSuccess2 ;
=< =
true> B
}C D
;D E
public 
static 
Result 
Success $
($ %
HttpStatusCode% 3

statusCode4 >
)> ?
=>@ B
newC F
(F G
)G H
{I J
	IsSuccessK T
=U V
trueW [
,[ \

StatusCode] g
=h i

statusCodej t
}u v
;v w
public 
static 
Result 
Failure $
($ %
string% +
message, 3
)3 4
=>5 7
new8 ;
(; <
)< =
{> ?
	IsSuccess@ I
=J K
falseL Q
,Q R
MessageS Z
=[ \
message] d
}e f
;f g
public 
static 
Result 
Failure $
($ %
HttpStatusCode% 3

statusCode4 >
,> ?
string@ F
messageG N
)N O
=> 
new 
( 
) 
{ 
	IsSuccess  
=! "
false# (
,( )
Message* 1
=2 3
message4 ;
,; <

StatusCode= G
=H I

statusCodeJ T
}U V
;V W
} 
} ¯
ZD:\Documents\GitHub\MovieMood\review_handler\review_handler.Core\Helpers\ResultOfEntity.cs
	namespace 	
review_handler
 
. 
Core 
. 
Helpers %
{ 
public 

class 
ResultOfEntity 
<  !
TEntity! (
>( )
{ 
public 
bool 
	IsSuccess 
{ 
get  #
;# $
set% (
;( )
}* +
public 
bool 
	IsFailure 
=>  
!! "
	IsSuccess" +
;+ ,
public		 
string		 
?		 
Message		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public

 
TEntity

 
?

 
Entity

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
public 
HttpStatusCode 

StatusCode (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
static 
ResultOfEntity $
<$ %
TEntity% ,
>, -
Success. 5
(5 6
TEntity6 =
entity> D
)D E
=>F H
newI L
(L M
)M N
{O P
	IsSuccessQ Z
=[ \
true] a
,a b
Entityc i
=j k
entityl r
}s t
;t u
public 
static 
ResultOfEntity $
<$ %
TEntity% ,
>, -
Success. 5
(5 6
HttpStatusCode6 D
codeE I
,I J
TEntityK R
entityS Y
)Y Z
=> 
new 
( 
) 
{ 
	IsSuccess  
=! "
true# '
,' (
Entity) /
=0 1
entity2 8
,8 9

StatusCode: D
=E F
codeG K
}L M
;M N
public 
static 
ResultOfEntity $
<$ %
TEntity% ,
>, -
Failure. 5
(5 6
string6 <
message= D
)D E
=>F H
newI L
(L M
)M N
{O P
	IsSuccessQ Z
=[ \
false] b
,b c
Messaged k
=l m
messagen u
}v w
;w x
public 
static 
ResultOfEntity $
<$ %
TEntity% ,
>, -
Failure. 5
(5 6
HttpStatusCode6 D
httpStatusCodeE S
,S T
stringU [
message\ c
)c d
=> 
new 
( 
) 
{ 
	IsSuccess  
=! "
false# (
,( )
Message* 1
=2 3
message4 ;
,; <

StatusCode= G
=H I
httpStatusCodeJ X
}Y Z
;Z [
} 
} í	
aD:\Documents\GitHub\MovieMood\review_handler\review_handler.Core\Repositories\Base\IRepository.cs
	namespace 	
review_handler
 
. 
Core 
. 
Repositories *
.* +
Base+ /
{ 
public 

	interface 
IRepository  
<  !
T! "
>" #
where$ )
T* +
:+ ,
class- 2
{ 
Task 
< 
IReadOnlyList 
< 
T 
> 
> 
GetAllAsync *
(* +
)+ ,
;, -
Task 
< 
T 
> 
GetByIdAsync 
( 
Guid !
id" $
)$ %
;% &
Task 
< 
T 
> 
AddAsync 
( 
T 
entity !
)! "
;" #
Task 
UpdateAsync 
( 
T 
entity !
)! "
;" #
Task		 
DeleteAsync		 
(		 
T		 
entity		 !
)		! "
;		" #
}

 
} ¸
aD:\Documents\GitHub\MovieMood\review_handler\review_handler.Core\Repositories\IMovieRepository.cs
	namespace 	
review_handler
 
. 
Core 
. 
Repositories *
{ 
public 

	interface 
IMovieRepository %
:& '
IRepository( 3
<3 4
Movie4 9
>9 :
{; <
}= >
} »
bD:\Documents\GitHub\MovieMood\review_handler\review_handler.Core\Repositories\IReviewRepository.cs
	namespace 	
review_handler
 
. 
Core 
. 
Repositories *
{ 
public 

	interface 
IReviewRepository &
:' (
IRepository) 4
<4 5
Review5 ;
>; <
{= >
}? @
} µ
`D:\Documents\GitHub\MovieMood\review_handler\review_handler.Core\Repositories\IUserRepository.cs
	namespace 	
review_handler
 
. 
Core 
. 
Repositories *
{ 
public 

	interface 
IUserRepository $
:% &
IRepository' 2
<2 3
User3 7
>7 8
{9 :
}; <
} 